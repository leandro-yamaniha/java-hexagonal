server:
  port: 8081
  servlet:
    context-path: /

spring:
  application:
    name: restaurant-management-spring-boot
  
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/restaurant_db}
    username: ${DB_USERNAME:restaurant_user}
    password: ${DB_PASSWORD:restaurant_password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: ${LOG_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    open-in-view: false
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 10000ms
      jedis:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
  
  web:
    cors:
      allowed-origins: "http://localhost:4200,http://localhost:3000"
      allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
      allowed-headers: "*"
      allow-credentials: true

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
  info:
    title: Restaurant Management API (Spring Boot)
    version: 1.0.0
    description: Restaurant management system REST API built with Spring Boot
  servers:
    - url: http://localhost:8081
      description: Development server

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    com.restaurant: DEBUG
    org.hibernate.SQL: ${LOG_SQL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_SQL:WARN}
    org.springframework.web: INFO
    org.springframework.security: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application info
info:
  app:
    name: Restaurant Management System
    description: Spring Boot implementation of restaurant management system
    version: 1.0.0
    framework: Spring Boot 3.2.1
    java-version: 21

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: true
  logging:
    level:
      com.restaurant: DEBUG

---
# Test profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    show-sql: false
  logging:
    level:
      com.restaurant: INFO
      org.springframework: WARN
  datasource:
    hikari:
      maximum-pool-size: 50
